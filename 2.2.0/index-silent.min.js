"use strict";!function(){var n=function(n){this.buffer=n};n.prototype={begin:function(){return this.buffer.push("[").shift(),this},newItem:function(){return this.filled&&this.buffer.push(","),this.buffer.newline().indent(),this.filled=!0,this},add:function(t){return this.buffer.push(t instanceof n?t.buffer:t),this},end:function(){return this.buffer.unshift(),this.filled&&this.buffer.newline().indent(),this.buffer.push("]"),this}},window.ArrayBuilder=n}(),function(){var n=function(){this.buffer=[],this._indent=[]};n.prototype={indent:function(){return this.buffer.push(this._indent.join("")),this},shift:function(){return this._indent.push("  "),this},unshift:function(){return this._indent.pop(),this},getIndentLevel:function(){return this._indent.length},push:function(n){return this===n?n:(this.pushValue(n),this)},pushValue:function(n){return this.buffer.push(n),this},newline:function(){return this.buffer.push("\n"),this},print:function(){return this.buffer.join("")}},window.StreamBuffer=n}(),function(){var n=function(n){var t=n.indexOf("("),e=n.indexOf(")"),i=n.substring(t+1,e).trim();return i?i.split(",").map(function(n){return n.trim()}):[]},t=function(n){var t=n.indexOf("{"),e=n.indexOf("}"),i=n.substring(t+1,e).trim();return i?i.split("\n").map(function(n){return n.trim()}):[]},e=function(e){return{params:n(e),lines:t(e)}};window.functionParseUtils={parse:e,parseBody:t,parseParams:n}}(),function(){var n=function(n){this.buffer=n};n.prototype={begin:function(){return this.buffer.push("function ("),this},params:function(n){return this.buffer.push(n.join(",")),this},body:function(n){this.buffer.push(") {"),this.buffer.shift();var t=this;return n.forEach(function(n){t.bodyLine(n)}),this},bodyLine:function(n){return this.filled=!0,this.buffer.newline().indent().push(n),this},end:function(){return this.buffer.unshift(),this.filled&&this.buffer.newline().indent(),this.buffer.push("}"),this}};var t=function(t){n.call(this,t)};t.prototype=Object.create(n.prototype),t.prototype.begin=function(){return this.buffer.push('<span class="function">'),n.prototype.begin.call(this)},t.prototype.end=function(){return n.prototype.end.call(this),this.buffer.push("</span>"),this},window.FunctionBuilder=n,window.HtmlFunctionBuilder=t}(),function(){var n=function(n){this.buffer=n};n.prototype={begin:function(){return this.buffer.push("{").shift(),this},_printKey:function(n){return this.buffer.push(n.toString()),this},key:function(n){return this.filled&&this.buffer.push(","),this.buffer.newline().indent(),this.filled=!0,this._printKey(n),this.buffer.push(": "),this},value:function(t){return this.buffer.push(t instanceof n?t.buffer:t),this},add:function(n,t){return this.key(n).value(t)},end:function(){return this.buffer.unshift(),this.filled&&this.buffer.newline().indent(),this.buffer.push("}"),this}};var t=function(t){n.call(this,t)};t.prototype=Object.create(n.prototype),t.prototype._printKey=function(n){return this.buffer.push('<span class="key">').push(n.toString()).push("</span>"),this},window.ObjectBuilder=n,window.HtmlObjectBuilder=t}(),function(){var n=function(n){this.buffer=n};n.prototype={add:function(n){this.filled&&(this.buffer.shift(),this.buffer.indent(),this.buffer.unshift()),this.filled=!0;var t,e=typeof n;switch(e){case"undefined":t='<span class="undefined">undefined</span>';break;case"number":t=window.isNaN(n)?'<span class="NaN">NaN</span>':n===1/0||n===-(1/0)?'<span class="number">'+(n===-(1/0)?"-":"")+"Infinity</span>":'<span class="'+e+'">'+n+"</span>";break;case"string":t='<span class="'+e+'">"'+n+'"</span>';break;case"null":case"boolean":t='<span class="'+e+'">'+n+"</span>";break;case"symbol":t='<span class="'+e+'">'+Symbol.keyFor(n)+"</span>";break;case"object":if(null===n){t='<span class="null">'+n+"</span>";break}default:throw new Error("Unknown primitive type: "+e)}this.buffer.push(t)}},window.PrimitiveBuilder=n}(),function(n){function t(n,t){var e=new window.HtmlFunctionBuilder(t),i=window.functionParseUtils.parse(n.toString());e.begin().params(i.params).body(i.lines).end()}var e=function(n){return n instanceof Error&&(n=n.message),'<span class="error">'+n.toString()+"</span>"},i=function(n,t){new window.PrimitiveBuilder(t).add(n)},r=function(n,t){var e=new window.ArrayBuilder(t);e.begin();for(var i=0;i<n.length;i++)e.newItem().add(u(n[i],t));e.end()},s=function(n,t){var e=new window.HtmlObjectBuilder(t);e.begin();for(var i in n)e.key(i).value(u(n[i],t));e.end()},o=function(n,t){return Array.isArray(n)?r(n,t):s(n,t)},u=function(n,e){if(e=e||new window.StreamBuffer,e.getIndentLevel()>=5&&(n="..."),e.buffer.length>10240)return e;switch(typeof n){case"function":t(n,e);break;case"object":if(null!==n){o(n,e);break}default:i(n,e)}return e},f=function(n,t){var i="log: ";return t?i+=e(n[0]):n.forEach(function(t,r){i+=t instanceof Error?e(n[0]):u(t).print(),r<n.length-1&&(i+="\t")}),i+"\n\n\n"},c=function(n){n.classList.add("console-container"),n.innerHTML='<pre class="console-container__code"></pre>';var t=n.querySelector(".console-container__code");if(!t)throw Error("Console is not inited!");var e={};return e.log=function(){var n=Array.prototype.slice.call(arguments);t.innerHTML+=f(n),"function"==typeof e.onlog&&e.onlog(n)},e.error=function(n){t.innerHTML+=f([n],!0)},e.clean=function(){t.innerHTML=""},e.getLogSource=function(){return n.innerHTML},e};n.jsConsoleInit=c}(window),function(n){var t=[],e=function(n){t.push(n)};n.onerror=e,n.console.warn=e,n.console.error=e;var i=[],r=function(n){i.push(n)};n.console.info=r,n.console.log=r,n.console.debug=r;var s=function(){var e=n.document.createElement("div"),r=n.jsConsoleInit(e);n.document.body.appendChild(e),n.console.log=r.log,n.console.error=r.error,n.console.info=r.log,n.console.warn=r.error,t.forEach(function(n){r.error(n)}),i.forEach(function(n){r.log(n)}),n.onerror=function(n){r.error(n)}},o=function(){var t=n.document.createElement("link");t.rel="stylesheet",t.href="//zeckson.github.io/demo-console/index.css",n.document.head.appendChild(t)};window.addEventListener("DOMContentLoaded",function(){s(),o()})}(window);